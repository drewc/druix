#+TITLE: NodeJS

* Usage

First off set the "global" to a local dotfiledir.

In =~/.npmrc= do this:

#+begin_src conf
prefix=/home/drewc/.npm-global
#+end_src

Then, in =.profile= or the like, set the ~$PATH~ to include that bin dir.

#+begin_src sh
export PATH="$HOME/.npm-global/bin:$PATH"
#+end_src

** Use =pnpm=!

#+begin_src sh
npm install -g pnpm
#+end_src


* Package

#+begin_src scheme :tangle ../druix/packages/node.scm
  (define-module (druix packages node)
    #:use-module ((guix licenses) #:prefix license:)
    #:use-module ((guix build utils) #:select (alist-replace))
    #:use-module (guix packages)
    #:use-module (guix derivations)
    #:use-module (guix download)
    #:use-module (guix git-download)
    #:use-module (guix utils)
    #:use-module (guix build-system gnu)
    #:use-module (guix build-system node)
    #:use-module (gnu packages)
    #:use-module ((gnu packages node) #:prefix node:)
    #:use-module (ice-9 match)
    #:use-module (srfi srfi-26))

  (define-public node
    (package
     (inherit node:node-lts)
     (version "18.12.0")
     (source (origin
              (method url-fetch)
              (uri (string-append "https://nodejs.org/dist/v" version
                                  "/node-v" version ".tar.xz"))
              (sha256
               (base32 "0bpl0klb60wnhh53xdzgxa0dajjlrnk6dmnfcdvikswr54gg19vk"))
              (modules '((guix build utils)))
              (snippet
               `(begin
                 ;; Remove bundled software, where possible
                  (for-each delete-file-recursively
                            '("deps/cares"
                              "deps/icu-small"
                              "deps/nghttp2"
                            ;;  "deps/openssl"
                              "deps/zlib"))
                  (substitute* "Makefile"
                               ;; Remove references to bundled software.
                               (("deps/uv/uv.gyp") "")
                               (("deps/zlib/zlib.gyp") ""))
                  #t))))

     (arguments
      (substitute-keyword-arguments
       (package-arguments node:node-lts)
       ((#:phases phases)
        `(modify-phases ,phases
                        (delete 'replace-llhttp-sources)
                        (replace 'delete-problematic-tests
                                 (lambda* (#:key inputs #:allow-other-keys)
                                   ;; FIXME: These tests fail in the build container, but they don't
                                   ;; seem to be indicative of real problems in practice.
                                   (for-each delete-file
                                             '("test/parallel/test-release-npm.js"
                                               "test/parallel/test-stdin-from-file-spawn.js"
                                               "test/parallel/test-cluster-primary-error.js"
                                               "test/parallel/test-cluster-primary-kill.js"
                                               ))

                                   ;; These require a DNS resolver.
                                   (for-each delete-file
                                             '("test/parallel/test-dns.js"
                                               "test/parallel/test-net-socket-connect-without-cb.js"
                                               "test/parallel/test-tcp-wrap-listen.js"
                                               "test/parallel/test-dns-lookupService-promises.js"))
                                   #t))))))))

  (define-public node-16
    (package
      (inherit node:node-lts)
      (version "16.17.0")
      (source (origin
                (method url-fetch)
                (uri (string-append "https://nodejs.org/dist/v" version
                                    "/node-v" version ".tar.xz"))
                (sha256
                 (base32 "0iang6lqx006ki45wxd9zpscbh59bib67j8vja2nji2yd22w4a0x"))
                (modules '((guix build utils)))
                (snippet
                 `(begin
                    ;; Remove bundled software, where possible
                    (for-each delete-file-recursively
                              '("deps/cares"
                                "deps/icu-small"
                                "deps/nghttp2"
                                "deps/openssl"
                                "deps/zlib"))
                    (substitute* "Makefile"
                      ;; Remove references to bundled software.
                      (("deps/uv/uv.gyp") "")
                      (("deps/zlib/zlib.gyp") ""))
                    #t))))

      (arguments
       (substitute-keyword-arguments (package-arguments node:node-lts)
         ((#:phases phases)
      `(modify-phases ,phases
         (delete 'replace-llhttp-sources)
         (replace 'delete-problematic-tests
           (lambda* (#:key inputs #:allow-other-keys)
             ;; FIXME: These tests fail in the build container, but they don't
             ;; seem to be indicative of real problems in practice.
              (for-each delete-file
                        '("test/parallel/test-release-npm.js"
                          "test/parallel/test-stdin-from-file-spawn.js"
                          "test/parallel/test-cluster-primary-error.js"
                          "test/parallel/test-cluster-primary-kill.js"
                          ))

              ;; These require a DNS resolver.
              (for-each delete-file
                        '("test/parallel/test-dns.js"
                          "test/parallel/test-dns-lookupService-promises.js"))

             #t
             ))))))))
#+end_src
